{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Da",
				"Database	module"
			],
			[
				"D",
				"DatabaseHandler	import"
			],
			[
				"hand",
				"handleLogUpdate"
			],
			[
				"selc",
				"selectedDeck	statement"
			],
			[
				"QSqlR",
				"QSqlRelationalTableModel	class"
			],
			[
				"deckna",
				"deckname	param"
			],
			[
				"sel",
				"selectedDeck	statement"
			],
			[
				"QS",
				"QStandardItemModel	class"
			],
			[
				"qu",
				"query	param"
			],
			[
				"app",
				"appendRow	function"
			],
			[
				"fetch",
				"fetchall"
			],
			[
				"shosw",
				"showFoundCards	function"
			],
			[
				"man",
				"mainWindow	statement"
			],
			[
				"fetc",
				"fetchall"
			],
			[
				"get",
				"getCardByCost"
			],
			[
				"py",
				"pyqtSlot	function"
			],
			[
				"QItem",
				"QItemSelectionModel	class"
			],
			[
				"selec",
				"selectionModel"
			],
			[
				"se",
				"selectionModel"
			],
			[
				"deck",
				"deckSelected	function"
			],
			[
				"newD",
				"newDeckSignal	statement"
			],
			[
				"dec",
				"deckNameChangedSignal	statement"
			],
			[
				"index",
				"indexFromItem	function"
			],
			[
				"deckV",
				"allDecksView"
			],
			[
				"Q",
				"QStandardItem	class"
			],
			[
				"main",
				"mainWindow	statement"
			],
			[
				"pyq",
				"pyqtSlot"
			],
			[
				"f",
				"from"
			],
			[
				"add",
				"addCardToDeck"
			],
			[
				"ext",
				"execute"
			],
			[
				"cards",
				"cardsInDeck"
			],
			[
				"cardi",
				"cardid"
			],
			[
				"ex",
				"execute"
			],
			[
				"pla",
				"playerName"
			],
			[
				"UI",
				"UI_MainWindow"
			],
			[
				"lo",
				"logging"
			],
			[
				"log",
				"logging"
			],
			[
				"pl",
				"playerName"
			],
			[
				"re",
				"result"
			],
			[
				"fo",
				"foundHeroes"
			],
			[
				"getD",
				"getDeckData"
			],
			[
				"ru",
				"running"
			],
			[
				"P",
				"PyQt5"
			],
			[
				"de",
				"daemon"
			],
			[
				"Lo",
				"Logreader"
			],
			[
				"nam",
				"nameItem"
			],
			[
				"cla",
				"callback"
			],
			[
				"new",
				"newWidget"
			],
			[
				"pa",
				"pack_propagate"
			],
			[
				"co",
				"control"
			],
			[
				"cle",
				"clearOverlay"
			],
			[
				"s",
				"self"
			],
			[
				"data",
				"dataAvalible"
			],
			[
				"cl",
				"clearButton"
			],
			[
				"wi",
				"wm_attributes"
			],
			[
				"w",
				"wm_attributes"
			],
			[
				"dek",
				"deckStatsFrame"
			],
			[
				"stat",
				"statFrames"
			],
			[
				"Sta",
				"StatFrames"
			],
			[
				"c",
				"columnspan"
			],
			[
				"losses",
				"lossesLabel"
			],
			[
				"win",
				"winrate"
			],
			[
				"N",
				"nameEntry"
			],
			[
				"db",
				"dbhandler"
			],
			[
				"e",
				"except"
			],
			[
				"th",
				"threading"
			],
			[
				"pr",
				"print"
			],
			[
				"a",
				"action"
			],
			[
				"logrea",
				"logreader"
			],
			[
				"find",
				"findall"
			],
			[
				"va",
				"var2"
			],
			[
				"read",
				"readthread"
			],
			[
				"q",
				"queue"
			],
			[
				"how",
				"howToGet"
			],
			[
				"js",
				"jsonfile"
			],
			[
				"cr",
				"createDatabase"
			],
			[
				"card",
				"cardquery"
			],
			[
				"in",
				"inPlayText"
			],
			[
				"ra",
				"rarity"
			],
			[
				"car",
				"cardsquery"
			],
			[
				"__",
				"__Cards"
			],
			[
				"i",
				"incAmount"
			],
			[
				"am",
				"amount"
			],
			[
				"A",
				"amount"
			],
			[
				"cu",
				"currentStats"
			],
			[
				"Data",
				"DatabaseHandler"
			],
			[
				"Cl",
				"ClearButton"
			],
			[
				"Bu",
				"Button"
			],
			[
				"_",
				"__drawn"
			],
			[
				"st",
				"string"
			],
			[
				"Card",
				"cardID"
			],
			[
				"__pla",
				"__played"
			],
			[
				"Ca",
				"cardId"
			],
			[
				"Opp",
				"OPPOSING"
			],
			[
				"fri",
				"fiendlyHeroPower"
			],
			[
				"fr",
				"fiendlyHero"
			],
			[
				"type",
				"types"
			],
			[
				"Pla",
				"PLAY"
			],
			[
				"fien",
				"friendlyMinionDie"
			],
			[
				"Pl",
				"PLAY"
			],
			[
				"rege",
				"regex2"
			],
			[
				"fin",
				"findall"
			],
			[
				"p",
				"pickle"
			],
			[
				"req",
				"request"
			],
			[
				"ur",
				"urllib"
			],
			[
				"r",
				"request"
			],
			[
				"tna",
				"transtab"
			],
			[
				"gam",
				"gameId"
			],
			[
				"io",
				"ion-nav-bar"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "import sys\nimport logging\nimport os\nfrom Database import dbhandler\nfrom logreader import LogReader\n\n\ndef cls():\n    os.system('cls' if os.name == 'nt' else 'clear')\n\n\nclass Control():\n\n    \"\"\"Main controler\"\"\"\n\n    def __init__(self):\n        # Logreader\n        self.filepath = '/Users/Nieo/Library/Logs/Unity/Player.log'\n        self.logreader = LogReader(self.filepath, self.handleLogUpdate)\n        self.database = dbhandler.DatabaseHandler()\n        self.playerName = 'Nieo'\n        self.logreader.start()\n\n        sys.exit(self.app.exec_())\n\n    def handleLogUpdate(self, type, data):\n        if type == \"zone\":\n            if data[2] == \"OPPOSING HAND\":\n                print(self.database.getCardName(data[1]))\n            else:\n                pass\n                # logging.debug(data)\n        elif type == \"playState\":\n            logging.debug(data)\n            if data[1] == 'PLAYING' and data[0] == self.playerName:\n                logging.info(\"New game starting\")\n\n            elif data[1] == 'WON':\n                if data[0] == self.playerName:\n                    print(\"------Victory------\")\n                    cls()\n                    logging.info(\"You have won\")\n                else:\n                    print(\"-----Defeat-----\")\n                    cls()\n                    logging.info(\"You have lost\")\n\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.CRITICAL)\n    a = Control()\n",
			"file": "control.py",
			"file_size": 1426,
			"file_write_time": 130856798190000000,
			"settings":
			{
				"buffer_size": 1426,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Database/dbhandler.py",
			"settings":
			{
				"buffer_size": 3391,
				"line_ending": "Unix"
			}
		},
		{
			"file": "logreader.py",
			"settings":
			{
				"buffer_size": 907,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 67.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Nieo/Git/HSData"
	],
	"file_history":
	[
		"/Users/Nieo/Git/HSData/deck.py",
		"/Users/Nieo/Git/HSData/__init__.py",
		"/Users/Nieo/Git/HSData/Database/__init__.py",
		"/Users/Nieo/Git/HSData/game.py",
		"/Users/Nieo/Git/HSData/Database/dbhandler.py",
		"/Users/Nieo/Git/HSData/mainwindow.py",
		"/Users/Nieo/Documents/python/web/mysite/manage.py",
		"/Users/Nieo/Git/HSData/HSData.sublime-project",
		"/Users/Nieo/Git/HSData/Database/initDB.py",
		"/Users/Nieo/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/Nieo/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/Nieo/Git/HSData/UI/mainWindow.py",
		"/Users/Nieo/Git/HSData/logreaderOLD.py",
		"/Users/Nieo/Library/Application Support/Sublime Text 3/Packages/Anaconda/README.md",
		"/Users/Nieo/Git/HSData/window.py",
		"/Users/Nieo/Git/HSData/Player.log",
		"/Users/Nieo/Git/HSData/Database/AllSets.enUS.json",
		"/Users/Nieo/Library/Application Support/Sublime Text 3/Packages/User/Python.sublime-build",
		"/Users/Nieo/Library/Application Support/Sublime Text 3/Packages/Anaconda/Anaconda.sublime-settings",
		"/Users/Nieo/Git/HSData/HSData.sublime-workspace",
		"/Users/Nieo/Library/Application Support/Sublime Text 3/Packages/User/Distraction Free.sublime-settings",
		"/Users/Nieo/Git/HSData/logreader.py",
		"/Users/Nieo/Git/HSData/control.py",
		"/Users/Nieo/Git/HSData/.gitignore",
		"/Users/Nieo/Git/HSData/overlay.py",
		"/Users/Nieo/Git/HSData/drawItem.py",
		"/Users/Nieo/Git/HSData/UI/overlayDialog.py",
		"/Users/Nieo/Git/HSData/UI/drawItem.py",
		"/Users/Nieo/Git/HSData/mainWindow.py",
		"/Users/Nieo/Documents/Qt/Learning/test.py",
		"/Users/Nieo/Git/HSData/mainWindowControls.py",
		"/Users/Nieo/Git/HSData/drawlist.py",
		"/Users/Nieo/Git/HSData/OpponentCardList.py",
		"/Users/Nieo/Documents/Qt/Learning/Form.py",
		"/Users/Nieo/Git/HSData/log.config",
		"/Users/Nieo/Git/HSData/dbhandler.py",
		"/Users/Nieo/Git/HSData/initDB.py",
		"/Users/Nieo/Git/HSData/config.txt",
		"/Users/Nieo/Documents/python/Logging/TestLog/readableLog.txt",
		"/Users/Nieo/Documents/python/Logging/LogParser.py",
		"/Users/Nieo/Documents/python/Logging/Data/Player1.log",
		"/Users/Nieo/Documents/python/Logging/GameTest.py",
		"/Users/Nieo/Documents/python/Logging/guitest.py",
		"/Users/Nieo/Documents/python/Logging/overlay.py",
		"/Users/Nieo/Documents/python/Logging/dbhandler.py",
		"/Users/Nieo/Documents/python/Logging/JsonTest.py",
		"/Users/Nieo/Documents/python/Logging/game.py",
		"/Users/Nieo/Documents/python/Logging/regex",
		"/Users/Nieo/Documents/python/Logging/card.py",
		"/Users/Nieo/Documents/python/Logging/deck.py",
		"/Users/Nieo/Documents/python/Logging/Decklist.py",
		"/Users/Nieo/Documents/python/helloworld.py",
		"/Users/Nieo/Downloads/David/Labb 4/Uppgift 3/interupt.s12",
		"/Users/Nieo/Documents/python/PyhtonChallenge/PyChallenge7.py",
		"/Users/Nieo/Documents/python/PyhtonChallenge/Data4.txt",
		"/Users/Nieo/Documents/python/PyhtonChallenge/PyChallenge6.py",
		"/Users/Nieo/Documents/python/PyhtonChallenge/banner.p.webarchive",
		"/Users/Nieo/Documents/python/PyhtonChallenge/Data6.p",
		"/Users/Nieo/Documents/python/PyhtonChallenge/PyChallenge4.py",
		"/Users/Nieo/Documents/python/PyhtonChallenge/PyChallenge5.py",
		"/Users/Nieo/Documents/python/PyhtonChallenge/PyChallenge3.py",
		"/Users/Nieo/Documents/python/PyhtonChallenge/PyChallenge2.py",
		"/Users/Nieo/Documents/python/PyhtonChallenge/Data3.txt",
		"/Users/Nieo/Git/furiousbalcony/www/index.html",
		"/Users/Nieo/Git/furiousbalcony/www/templates/tab-settings.html",
		"/Users/Nieo/Git/furiousbalcony/www/js/controllers.js",
		"/Users/Nieo/Git/furiousbalcony/www/js/app.js",
		"/Users/Nieo/Git/furiousbalcony/www/templates/tabs.html",
		"/Users/Nieo/Git/furiousbalcony/www/templates/game-detail.html",
		"/Users/Nieo/Git/furiousbalcony/www/templates/tab-dash.html",
		"/Users/Nieo/Downloads/David/Subroutines.s12",
		"/Users/Nieo/Downloads/reflex-2.10.0/reflex.conf",
		"/Users/Nieo/Git/furiousbalcony/www/js/services.js",
		"/Users/Nieo/Git/furiousbalcony/www/templates/tab-games.html",
		"/Users/Nieo/Git/furiousbalcony/www/templates/tab-friends.html",
		"/Users/Nieo/Git/furiousbalcony/www/css/style.css",
		"/Users/Nieo/Git/furiousbalcony/platforms/ios/www/js/services.js",
		"/Users/Nieo/Library/Application Support/Sublime Text 3/Packages/User/sftp_servers/styx sftp"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"    ",
			"selectedDeckIndex",
			"selectedDeck",
			"cardsInDeck",
			"ex_537",
			"item",
			"fd",
			"size"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "control.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1426,
						"regions":
						{
						},
						"selection":
						[
							[
								980,
								980
							]
						],
						"settings":
						{
							"auto_complete": false,
							"color_scheme": "Packages/Theme - Flatland/Flatland Monokai.tmTheme",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Database/dbhandler.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3391,
						"regions":
						{
						},
						"selection":
						[
							[
								317,
								317
							]
						],
						"settings":
						{
							"auto_complete": false,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "logreader.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 907,
						"regions":
						{
						},
						"selection":
						[
							[
								808,
								808
							]
						],
						"settings":
						{
							"auto_complete": false,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 182.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "HSData.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Library/Application Support/Sublime Text 3/Packages/User/sftp_servers/styx sftp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 189.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
